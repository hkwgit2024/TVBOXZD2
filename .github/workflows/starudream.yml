name: clash-speedtest

on:
  push:
    paths:
      - '.github/workflows/starudream.yml'
      
  schedule:
    - cron: '0 */3 * * *'
  # 允许手动触发
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  run-speedtest:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4
      
      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: 安装 Python 依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests requests_cache pyyaml tqdm
      
      - name: 下载并安装 clash-speedtest 工具
        run: |
          wget https://github.com/starudream/clash-speedtest/releases/download/v3.0.1/clash-speedtest_v3.0.1_linux_amd64.tar.gz
          tar -xzvf clash-speedtest_v3.0.1_linux_amd64.tar.gz
          sudo mv clash-speedtest /usr/local/bin/

      - name: 下载并安装 Mihomo 二进制文件
        run: |
          wget https://github.com/MetaCubeX/mihomo/releases/download/v1.17.0/mihomo-linux-amd64-v1.17.0.gz
          gunzip mihomo-linux-amd64-v1.17.0.gz
          chmod +x mihomo-linux-amd64-v1.17.0
          sudo mv mihomo-linux-amd64-v1.17.0 /usr/local/bin/mihomo
      
   
          
      - name: 启动 Mihomo 并等待
        run: |
          # 确保 Mihomo 配置文件包含外部控制器地址
          echo "external-controller: 127.0.0.1:9090" >> link.yaml
          
          # 在后台启动 Mihomo
          mihomo -f link.yaml -d . &
          
          # 等待 Mihomo 进程启动并监听端口
          for i in $(seq 1 10); do
            nc -z 127.0.0.1 9090 && echo "Mihomo is ready!" && break
            echo "Waiting for Mihomo to start... ($i/10)"
            sleep 2
          done
          
      - name: 运行测速并筛选节点
        run: |
          clash-speedtest --clash-addr "http://127.0.0.1:9090" \
                          --clash-secret "" \
                          --clash-proxy "http://127.0.0.1:7890" \
                          --threads 15 \
                          --includes ".*" \
                          --excludes "测试" \
                          --output clash.yaml
      
      - name: 停止 Mihomo 进程
        if: always()
        run: |
          pkill mihomo || true
      
      - name: 提交并推送更改
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          
          git add clash.yaml
          
          if ! git diff --cached --quiet; then
            git commit -m "chore: Update and filter Clash nodes via speedtest"
            
            for i in {1..3}; do
              git pull --rebase
              git push && break
              sleep 5
            done
          else
            echo "没有节点更改，无需提交。"
          fi
