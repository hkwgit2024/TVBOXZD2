name: 节点连通性速度测试

on:
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 时间午夜运行一次
  workflow_dispatch: # 允许手动触发工作流

jobs:
  test-nodes:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 环境中运行

    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4
        with:
      
          token: ${{ secrets.BOT }}

      - name: 设置 Bash 及依赖项
        run: |
          echo "正在更新 apt 软件包列表并安装依赖项..."
          sudo apt-get update || { echo "错误：apt-get update 失败，无法继续安装依赖项。" | exit 1; }
          sudo apt-get install -y curl coreutils git netcat-openbsd || { echo "错误：安装核心依赖项失败。" | exit 1; }
          echo "核心依赖项安装完成。"

      - name: 运行节点连通性测试脚本
        run: |
          chmod +x speed_test.sh # 赋予脚本执行权限
          echo "正在执行 speed_test.sh 脚本..."
          ./speed_test.sh
          if [ $? -ne 0 ]; then
            echo "错误：speed_test.sh 脚本执行失败。请查看 node_connectivity_results.log 获取详细信息。"
            # 由于不再上传日志，如果脚本失败，这里可以考虑 cat node_connectivity_results.log 以便在Actions日志中查看
            # cat node_connectivity_results.log
            exit 1 # 标记此步骤失败
          fi
          echo "脚本执行完成。详细信息请查看 node_connectivity_results.log 文件。"

      - name: 提交并推送结果
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

          # 确保本地分支是最新的，但不要删除新生成的文件
          echo "正在同步本地分支到远程仓库..."
          git fetch origin
          git checkout main # 确保在 main 分支
          # 使用 git merge --ff-only 替代 git reset --hard
          # 如果本地分支落后于远程且没有冲突，它会进行快进合并。
          # 如果本地分支已经是最新的，则不会有任何操作。
          git merge --ff-only origin/main || echo "本地分支已是最新的或需要手动合并（在CI中通常不会发生，可以忽略）"

          echo "正在添加生成的文件到 Git 暂存区..."
          [ -f "data/sub.txt" ] && git add data/sub.txt || echo "警告：未找到 data/sub.txt，跳过添加。"
          [ -f "data/dns_cache.json" ] && git add data/dns_cache.json || echo "警告：未找到 data/dns_cache.json，跳过添加。"

          if git diff --staged --quiet; then
            echo "未检测到文件更改，跳过 Git 提交操作。"
          else
            echo "检测到文件更改，正在提交并推送到仓库..."
            git commit -m "更新节点连通性测试结果和 DNS 缓存 - $(date '+%Y-%m-%d %H:%M:%S JST')"
            git push origin main
            echo "提交并推送更新完成。"
          fi
        env:
        
          GITHUB_TOKEN: ${{ secrets.BOT }}
