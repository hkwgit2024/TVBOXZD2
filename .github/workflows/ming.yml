name: Run Subscribe Mining Check

on:
  push:
    branches:
      - main # 在推送到 main 分支时触发

  workflow_dispatch: # 允许手动触发工作流

jobs:
  run-script:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 运行环境

    steps:
      - name: Checkout repository # 步骤 1: 检出仓库代码
        uses: actions/checkout@v4

      - name: Set up Python # 步骤 2: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # 使用最新的 Python 3 版本

      - name: Install dependencies # 步骤 3: 安装 Python 依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests tqdm pyyaml retry # 安装脚本所需库

      - name: Create necessary directories and placeholder files # 步骤 4: 创建脚本所需的统一目录结构及占位符文件
        run: |
          mkdir -p subscribe/mining
          
          # 创建占位符文件，防止脚本因文件不存在而报错
          touch subscribe/mining/sub_info.yaml
          touch subscribe/mining/sub_info.txt # 如果你的脚本会生成这个文件
          touch subscribe/mining/mining_config.yaml
          touch subscribe/mining/TGsources.yaml

      - name: Copy script to working directory # 步骤 5: 将脚本复制到统一的工作目录
        run: |
          cp mining_check.py subscribe/mining/mining_check.py # 假设你的脚本文件名为 mining_check.py 位于根目录

      - name: Run mining_check.py script # 步骤 6: 运行 Python 脚本
        # 切换到脚本所在目录运行，这样脚本内部的相对路径（./）就能正确解析
        run: |
          cd subscribe/mining
          python mining_check.py
        working-directory: ./subscribe/mining # 设置此步骤的工作目录

      - name: Commit and push changes # 步骤 7: 提交并推送结果文件
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat: Update generated subscribe data in subscribe/mining" # 提交信息
          branch: main # 推送到 main 分支
          # 提交 subscribe/mining 目录下所有 yaml 和 txt 文件
          file_pattern: subscribe/mining/*.yaml subscribe/mining/*.txt
