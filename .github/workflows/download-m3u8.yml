name: Download and Validate M3U8 URLs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  download-and-validate:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # 延长超时时间至 60 分钟

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiohttp  # 安装优化脚本所需的依赖

    - name: Cache data directory
      uses: actions/cache@v4
      with:
        path: data/
        key: ${{ runner.os }}-data-${{ format('{0:%Y%m%d}', github.event.schedule || github.event.repository.updated_at) }}  # 按日期缓存
        restore-keys: |
          ${{ runner.os }}-data-

    - name: Run script
      env:
        BOT: ${{ secrets.BOT }}
        REPO_URL: ${{ secrets.REPO_URL }}
      run: |
        python download_m3u8.py 2>&1 | tee script_output.log  # 保存脚本日志
      continue-on-error: false  # 脚本失败时停止工作流

    - name: Upload script logs
      if: always()  # 无论成功或失败都上传日志
      uses: actions/upload-artifact@v4
      with:
        name: script-logs
        path: script_output.log
        if-no-files-found: warn

    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: m3u8-results
        path: data/
        if-no-files-found: warn

    - name: Commit and push results
      if: always()
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git add data/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update M3U8 results [ci skip]"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const runId = context.runId;
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number: context.issue.number || 1,  // 假设有默认 issue 或替换为你的通知机制
            body: `Workflow failed for run ${runId}. Check logs: https://github.com/${owner}/${repo}/actions/runs/${runId}`
          });
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
