name: Download and Validate M3U8 URLs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  download-and-validate:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        [ -f requirements.txt ] && pip install -r requirements.txt --timeout=60 --retries=3 || pip install aiohttp==3.10.5 pyyaml==6.0.2 fuzzywuzzy python-Levenshtein

    - name: Cache data directory
      uses: actions/cache@v4
      with:
        path: data/
        key: ${{ runner.os }}-data-${{ hashFiles('data/**') }}
        restore-keys: ${{ runner.os }}-data-

    - name: Clean up invalid files
      run: |
        find . -type f -name '*[?":<>*|\r\n]*' -delete

    - name: Run script
      env:
        bot: ${{ secrets.bot }}
        REPO_URL: ${{ secrets.REPO_URL }}
      run: |
        time python download_m3u8.py 2>&1 | tee script_output.log

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: script-logs
        path: |
          script_output.log
          data/error_log.txt
          parser.log
        if-no-files-found: warn

    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: m3u8-results
        path: |
          data/valid_urls_batch_*.txt
          data/category_cache.json
        if-no-files-found: warn

    - name: Commit and push results
      if: always()
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git add data/ $(test -f categories.yaml && echo categories.yaml || echo '')
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git pull origin main --rebase
          git commit -m "Update M3U8 results and cache [skip ci]"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo} = context.repo;
          const runId = context.runId;
          await github.rest.issues.create({
            owner,
            repo,
            title: `Workflow Failure: Run ${runId}`,
            body: `Workflow failed for run ${runId}. Check logs: https://github.com/${owner}/${repo}/actions/runs/${runId}`
          });
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify on success
      if: success()
      run: |
        VALID_COUNT=$(grep -c "Valid URL" script_output.log || echo 0)
        echo "Workflow succeeded with $VALID_COUNT valid URLs"
