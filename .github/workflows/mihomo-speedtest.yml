name: Clash Speedtest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y uuid-runtime yq

      - name: Install Clash
        run: |
          wget https://github.com/MetaCubeX/mihomo/releases/download/v1.18.9/mihomo-linux-amd64-v1.18.9.gz
          gunzip mihomo-linux-amd64-v1.18.9.gz
          chmod +x mihomo-linux-amd64-v1.18.9
          mv mihomo-linux-amd64-v1.18.9 /usr/local/bin/clash

      - name: Download clash-speedtest
        run: |
          wget https://github.com/starudream/clash-speedtest/releases/download/v3.0.1/clash-speedtest_v3.0.1_linux_amd64.tar.gz
          tar -zxvf clash-speedtest_v3.0.1_linux_amd64.tar.gz
          chmod +x clash-speedtest

      - name: Validate link.yaml
        run: |
          if [ ! -f "link.yaml" ]; then
            echo "Error: link.yaml not found"
            exit 1
          fi
          # 检查 proxies 字段
          if ! yq e '.proxies' link.yaml > /dev/null; then
            echo "Error: link.yaml must include 'proxies' field"
            exit 1
          fi
          # 检查 UUID 格式
          echo "Validating proxy UUIDs..."
          invalid_uuids=$(yq e '.proxies[] | select(.uuid != null and .uuid != "" and .uuid | test("^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$") | not) | .name' link.yaml)
          if [ -n "$invalid_uuids" ]; then
            echo "Error: Invalid UUIDs found in the following proxies:"
            echo "$invalid_uuids"
            exit 1
          fi
          # 检查长 Host 头
          echo "Checking for overly long Host headers..."
          long_hosts=$(yq e '.proxies[] | select(.ws-opts.headers.Host != null and .ws-opts.headers.Host | length > 100) | .name' link.yaml)
          if [ -n "$long_hosts" ]; then
            echo "Warning: Overly long Host headers found in proxies:"
            echo "$long_hosts"
          fi

      - name: Fix link.yaml Configuration
        run: |
          cp link.yaml link.yaml.bak
          # 添加全局配置
          yq e -i '
            .mixed-port = 7890 |
            .external-controller = "127.0.0.1:9090" |
            .allow-lan = true |
            .mode = "rule" |
            .log-level = "info"
          ' link.yaml
          # 移除 flow: null
          yq e -i '.proxies[].flow |= (if . == "null" then null else . end)' link.yaml
          # 输出修改后的内容
          echo "Modified link.yaml content:"
          cat link.yaml

      - name: Run Clash
        run: |
          clash -f link.yaml > clash_log.txt 2>&1 &
          CLASH_PID=$!
          sleep 15
          echo "Clash startup log:"
          cat clash_log.txt
          if ! curl -s --connect-timeout 5 http://127.0.0.1:9090/version; then
            echo "Error: Failed to connect to Clash external controller at http://127.0.0.1:9090"
            kill $CLASH_PID 2>/dev/null || true
            exit 1
          fi
          echo "Clash external controller is ready"
          echo "CLASH_PID=$CLASH_PID" >> $GITHUB_ENV

      - name: Run clash-speedtest
        run: |
          ./clash-speedtest \
            --clash-addr http://127.0.0.1:9090 \
            --clash-proxy http://127.0.0.1:7890 \
            -d cloudflare \
            -r 20 \
            -t 3 \
            -y \
            -o ./clash.yaml > speedtest_log.txt 2>&1
          echo "clash-speedtest log:"
          cat speedtest_log.txt

      - name: Check clash.yaml
        run: |
          if [ -f "clash.yaml" ]; then
            echo "Test completed, results saved to clash.yaml"
            echo "clash.yaml content:"
            cat clash.yaml
          else
            echo "Error: Failed to generate clash.yaml"
            exit 1
          fi

      - name: Cleanup Clash
        if: always()
        run: |
          if [ -n "${CLASH_PID}" ] && ps -p ${CLASH_PID} > /dev/null; then
            kill ${CLASH_PID}
          fi

      - name: Upload Results
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: clash-yaml
          path: clash.yaml

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            clash_log.txt
            speedtest_log.txt
            link.yaml.bak
