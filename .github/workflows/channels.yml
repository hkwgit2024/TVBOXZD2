name: 提取

on:
  # 当 `.github/workflows/channels.yml` 文件有 push 操作时触发
  push:
    branches:
      - '.github/workflows/channels.yml'

  # 每天两次，每 6 小时自动运行一次
  schedule:
    - cron: '0 */6 * * *'

  # 允许手动触发工作流
  workflow_dispatch:

env:
  # 设置时区，确保定时任务时间正确
  TZ: Asia/Shanghai

jobs:
  update-channels:
    runs-on: ubuntu-latest

    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 安装 Python 依赖
        run: |
          python -m pip install --upgrade pip
          # 安装所有必要的库
          pip install requests pyyaml tqdm aiohttp beautifulsoup4 lxml tenacity cachetools requests-toolbelt numba

      - name: 运行频道处理脚本
        run: |
          python process_channels.py

      - name: 提交并推送更改
        run: |
          # 配置 Git 用户信息
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

          # 添加所有更改。根据你的脚本，这里需要添加生成的频道列表文件和状态文件。
          git add output/iptv.txt config/url_states.json

          # 检查是否有文件更改。如果没有，就什么也不做
          if ! git diff --cached --quiet; then
            # 提交更改
            git commit -m "Update IPTV channels list"
            
            # 循环尝试拉取、rebase 并推送，最多重试 3 次
            # 这可以解决在工作流执行期间远程分支被其他提交更新的问题
            for i in {1..3}; do
              echo "尝试第 $i 次拉取、rebase 和推送..."
              
              # 先拉取远程最新代码并 rebase
              git pull --rebase origin main
              
              # 如果拉取成功
              if [ $? -eq 0 ]; then
                # 推送本地提交到远程分支
                git push origin main
                
                # 如果推送成功，则退出循环
                if [ $? -eq 0 ]; then
                  echo "推送成功！"
                  exit 0
                fi
              fi
              
              # 如果失败，等待 5 秒后再次尝试
              echo "推送失败，5 秒后重试..."
              sleep 5
            done

            echo "多次尝试后推送仍失败。请检查仓库状态。"
            exit 1
          else
            echo "没有文件更改，无需提交。退出。"
          fi
