# .github/workflows/speedtest.yml
name: Clash Speed Test and Sort

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 */6 * * *' # 每6小时运行一次，您可以根据需要调整

jobs:
  speed-test-and-sort:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Clash Speedtest Tool
      # 使用 faceair/clash-speedtest 工具
      # 您也可以选择 xiecang/speedtest-clash
      # 注意：faceair/clash-speedtest 不需要预构建的二进制文件，它会自己编译
      run: |
        git clone https://github.com/faceair/clash-speedtest.git
        cd clash-speedtest
        go build -o clash-speedtest main.go

    - name: Run Speed Test and Sort
      # 执行速度测试并排序，然后保存到 clash.yaml
      # --config: 您的原始 Clash 配置文件的路径
      # --output: 排序后的 Clash 配置文件的输出路径
      # --sort-field: 排序字段，可以是 latency (延迟) 或 download-speed (下载速度)
      # --sort-order: 排序顺序，desc (降序) 或 asc (升序)
      # --download-size: 测试下载的文件大小 (例如 50MB)
      # --timeout: 每个节点的测试超时时间 (例如 10秒)
      run: |
        ./clash-speedtest/clash-speedtest \
          --config ./clash_config.yaml \
          --output ./clash.yaml \
          --sort-field download-speed \
          --sort-order desc \
          --timeout 10s \
          --download-size 50MB \
          --sort-field latency \
          --sort-order asc # 延迟升序，下载速度降序，根据需求调整排序优先级

    - name: Commit and Push Sorted Config
      # 将排序后的 clash.yaml 文件提交回仓库
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Update Clash config with sorted nodes by speed and latency"
        files: clash.yaml
        branch: main # 确保您的主分支名称正确，可能是 master 或 main
        # token: ${{ secrets.GITHUB_TOKEN }} # 默认即可，无需额外设置
