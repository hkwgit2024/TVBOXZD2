# .github/workflows/speedtest.yml
name: Clash Speed Test and Sort

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 */6 * * *' # 每6小时运行一次，您可以根据需要调整

jobs:
  speed-test-and-sort:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Make Speedtest Tool Executable
      run: chmod +x ./speedtest-clash

    - name: Run Speed Test and Capture Output
      # 运行 speedtest-clash 并将完整的输出重定向到一个临时文件
      # 同时也将输出打印到日志 (通过 tee)
      run: |
        echo "Starting speedtest-clash and capturing output..."
        ./speedtest-clash \
          -c ./clash_config.yaml \
          -output /dev/null \
          -sort b \
          -size 52428800 \
          -timeout 10s | tee speedtest_output.log
        
        EXIT_CODE=$?
        echo "speedtest-clash exited with code: ${EXIT_CODE}"
        echo "--- End of speedtest-clash run ---"

    - name: Extract Sorted Proxies and Generate clash.yaml
      run: |
        echo "Extracting sorted proxies from log and generating clash.yaml..."
        
        # --- 安装 jq 工具 ---
        sudo apt-get update && sudo apt-get install -y jq
        echo "jq installed successfully."
        # --- jq 安装结束 ---

        # 使用 grep 查找包含 "json: " 的行
        # 然后使用 sed 移除前缀 "json: "
        SORTED_PROXIES_JSON=$(grep -oP 'json: \[\{.*?\}\]' speedtest_output.log | sed 's/^json: //')
        
        if [ -z "$SORTED_PROXIES_JSON" ]; then
          echo "Error: Could not extract sorted proxies JSON from the log. Please check 'speedtest_output.log'."
          exit 1
        fi

        # 提取原始配置中 'proxies:' 之前的所有内容
        # 注意：这依赖于 'proxies:' 这一行在原始配置中的位置
        ORIGINAL_CONFIG_HEADER=$(awk '/^proxies:/ {exit} {print}' clash_config.yaml)
        
        # 格式化代理 JSON，使其符合 Clash YAML 格式和缩进
        # 使用 jq 确保 JSON 有效，并进行换行和缩进
        FORMATTED_PROXIES=$(echo "$SORTED_PROXIES_JSON" | jq '.' | sed 's/^/    /')

        # 将头部和排序后的代理写入到 clash.yaml
        echo "$ORIGINAL_CONFIG_HEADER" > clash.yaml
        echo "proxies:" >> clash.yaml
        echo "$FORMATTED_PROXIES" >> clash.yaml

        echo "--- Generated clash.yaml ---"
        cat clash.yaml # 打印生成的文件内容到日志中
        echo "--------------------------"
      id: generate_clash_yaml # 给予此步骤一个ID

    - name: Verify Generated File and Directory
      # 检查 clash.yaml 是否存在，并列出工作目录内容
      run: |
        echo "Verifying 'clash.yaml' file existence after generation..."
        ls -la
        
        if [ -f "clash.yaml" ]; then
          echo "'clash.yaml' found! Content should be correct."
          echo "File size: $(du -h clash.yaml | awk '{print $1}')"
          echo "First 20 lines of 'clash.yaml':"
          head -n 20 clash.yaml
        else
          echo "Critical Error: 'clash.yaml' was NOT generated. Commit step will fail."
          exit 1 # 如果文件未能生成，强制作业失败
        fi
      id: check_file_after_generation

    - name: Commit and Push Sorted Config
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Update Clash config with sorted nodes by speed"
        files: clash.yaml
        branch: main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # 确保仅在文件存在且上一步成功时才尝试提交
      if: success() && steps.check_file_after_generation.outcome == 'success' && -f 'clash.yaml'
