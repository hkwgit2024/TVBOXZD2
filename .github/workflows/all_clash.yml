name: all_clash

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - 'subscribe/all_clash.py'
  schedule:
    - cron: '0 */23 * * *'

jobs:
  collect:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        persist-credentials: true

    - name: 设置时区
      run: sudo timedatectl set-timezone 'Asia/Shanghai'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install requests tqdm PyYAML
        pip list

    - name: Run collection script
      env:
        URL_SOURCE: ${{ secrets.URL_SOURCE }}
      run: |
        python subscribe/all_clash.py --output data/all_clash.yaml --timeout ${{ vars.REQUEST_TIMEOUT || 60 }} --max_success ${{ vars.MAX_SUCCESS_NODES || 99999 }}
        
        echo "=== 生成文件列表 ==="
        ls -lh data/ || echo "data/ directory not found"
        echo "=== 错误日志 ==="
        cat error.log || echo "error.log not found"
        echo "=== URL 统计 CSV 文件 ==="
        cat data/url_statistics.csv || echo "url_statistics.csv not found"
        echo "=== 成功 URL 数量 ==="
        wc -l data/successful_urls.txt || echo "successful_urls.txt not found"
        echo "=== 失败 URL 数量 ==="
        wc -l data/failed_urls.txt || echo "failed_urls.txt not found"
        echo "=== 输出文件内容预览（前10行） ==="
        head -n 10 data/all_clash.yaml || echo "data/all_clash.yaml not found"

    - name: 清理工作目录
      run: |
        # 重置未跟踪的文件和未暂存的更改，确保工作目录干净
        git reset --hard
        git clean -fd
        echo "Working directory cleaned"

    - name: 提交更改
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # 添加所有需要提交的文件
        git add data/all_clash.yaml data/url_statistics.csv data/successful_urls.txt data/failed_urls.txt
        
        # 检查是否有实际更改，有更改才提交
        if ! git diff --staged --quiet; then
          git commit -m "Update proxy nodes: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "Changes committed"
        else
          echo "No changes to commit"
        fi

    - name: 拉取远程并合并
      run: |
        git fetch origin
        # 使用 merge 代替 rebase，避免复杂的冲突处理
        git pull origin main --no-rebase || {
          echo "Merge failed, attempting to resolve";
          git merge --abort;
          git reset --hard origin/main;
          echo "Reset to origin/main";
        }

    - name: 推送更改
      uses: ad-m/github-push-action@master
      with:
        branch: main
        ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
