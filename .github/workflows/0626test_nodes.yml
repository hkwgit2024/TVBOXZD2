name: Test Nodes with Mihomo (Python)

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 */6 * * *' # 每6小时运行一次，您可以根据需要调整

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # 使用最新的 Python 3 版本

      - name: Install Python dependencies
        run: pip install pyyaml requests # 安装所需的库

      - name: Install Mihomo
        run: |
          MIHOMO_VERSION="v1.18.9" # 您可以根据需要调整Mihomo版本
          wget -qO- https://github.com/MetaCubeX/mihomo/releases/download/${MIHOMO_VERSION}/mihomo-linux-amd64-${MIHOMO_VERSION}.gz | gzip -d > mihomo
          chmod +x mihomo
          sudo mv mihomo /usr/local/bin/mihomo

      - name: Create data directory
        run: mkdir -p data

      - name: Generate initial Mihomo config (placeholder)
        run: echo "{}" > config.yaml # 创建一个空的config.yaml，避免Mihomo启动时找不到文件

      - name: Run Mihomo in background
        run: |
          nohup mihomo -d . -f config.yaml &> mihomo.log &
          MIHOMO_PID=$!
          echo "MIHOMO_PID=$MIHOMO_PID" >> $GITHUB_ENV
          echo "Mihomo started with PID: $MIHOMO_PID"
          # 增加等待时间，确保Mihomo完全启动并监听端口
          sleep 10 # 增加到10秒，甚至可以尝试15-20秒如果仍然有问题
          # 检查Mihomo是否真的在运行并监听端口
          netstat -tulnp | grep 9090 && echo "Mihomo controller port 9090 is open." || echo "Mihomo controller port 9090 is NOT open."


      - name: Run Python node tester
        run: python tester.py

      - name: Stop Mihomo
        if: always() # 无论上一步成功失败，都尝试停止Mihomo
        run: |
          if [ -n "${{ env.MIHOMO_PID }}" ]; then
            kill ${{ env.MIHOMO_PID }} || true
            echo "Mihomo stopped."
          fi

      - name: Commit and push if changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/all.txt
          git diff --quiet --exit-code || git commit -m "Update successful nodes"
          git push
