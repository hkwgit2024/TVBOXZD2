name: Test Nodes with Mihomo (Python)

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: '0 */6 * * *' # 每6小时运行一次，您可以根据需要调整

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install pyyaml requests

      - name: Install Mihomo
        run: |
          MIHOMO_VERSION="v1.18.9" # 您可以根据需要调整Mihomo版本
          wget -qO- https://github.com/MetaCubeX/mihomo/releases/download/${MIHOMO_VERSION}/mihomo-linux-amd64-${MIHOMO_VERSION}.gz | gzip -d > mihomo
          chmod +x mihomo
          sudo mv mihomo /usr/local/bin/mihomo

      - name: Create data directory
        run: mkdir -p data

      # Mihomo 不会再用固定的 config.yaml 启动
      # Python 脚本将负责生成临时的配置文件，并将其路径传递给 Mihomo
      - name: Run Mihomo in background and wait for it to be ready
        run: |
          # 启动 Mihomo，初始可以不指定配置文件，或者指定一个最小配置
          # nohup mihomo -d . &> mihomo_startup.log & # Mihomo 默认会寻找 config.yaml
          # 更安全的做法是先确保 config.yaml 存在，即使是空的，让 Mihomo 启动起来
          touch mihomo_empty_config.yaml
          nohup mihomo -d . -f mihomo_empty_config.yaml &> mihomo_startup.log &
          MIHOMO_PID=$!
          echo "MIHOMO_PID=$MIHOMO_PID" >> $GITHUB_ENV
          echo "Mihomo started with PID: $MIHOMO_PID. Checking status..."
          
          # 等待 Mihomo 启动并监听端口
          timeout=60 # 最长等待60秒
          start_time=$(date +%s)
          while true; do
            current_time=$(date +%s)
            elapsed=$((current_time - start_time))
            if [ $elapsed -ge $timeout ]; then
              echo "Mihomo did not start listening on port 9090 within $timeout seconds."
              cat mihomo_startup.log # 打印 Mihomo 启动日志以便调试
              exit 1 # 启动失败，退出工作流
            fi

            # 检查 9090 端口是否在监听
            if netstat -tulnp | grep 9090; then
              echo "Mihomo controller port 9090 is open. Proceeding."
              break
            fi
            echo "Waiting for Mihomo controller to start (elapsed: ${elapsed}s)..."
            sleep 5 # 每5秒检查一次
          done

      - name: Run Python node tester
        # 将 mihomo_config.yaml 的路径作为参数传递给 Python 脚本
        # 这里我们假定 python 脚本仍然使用 MIHOMO_CONFIG_PATH = "config.yaml"
        # 那么确保 Mihomo 启动时没有锁定 config.yaml
        # 更好的方法是让 python 脚本生成一个随机的临时文件作为配置文件
        run: python tester.py

      - name: Stop Mihomo
        if: always() # 无论上一步成功失败，都尝试停止Mihomo
        run: |
          if [ -n "${{ env.MIHOMO_PID }}" ]; then
            kill ${{ env.MIHOMO_PID }} || true
            echo "Mihomo stopped."
          fi
          rm -f mihomo_startup.log mihomo_empty_config.yaml cache.db # 清理临时文件

      - name: Commit and push if changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          # 只添加 data/all.txt，因为 config.yaml 等临时文件已添加到 .gitignore
          git add data/all.txt
          git diff --quiet --exit-code || git commit -m "Update successful nodes"
          git push
