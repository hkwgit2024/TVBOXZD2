name: Test Proxy Nodes with Singbox

on:
  schedule:
    - cron: '0 18 * * *'  # UTC 18:00 = 北京时间 02:00
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-nodes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aiohttp requests

      - name: Create data directory
        run: |
          mkdir -p data

      - name: Download Singbox core
        id: download_singbox
        run: |
          # 动态检测架构
          ARCH=$(uname -m)
          case $ARCH in
            x86_64)
              ARCH="amd64"
              ;;
            aarch64)
              ARCH="arm64"
              ;;
            *)
              echo "::error::Unsupported architecture: $ARCH"
              exit 1
              ;;
          esac
          
          SINGBOX_VERSION="1.8.10"  # 请替换为最新版本
          FILENAME="sing-box-${SINGBOX_VERSION}-linux-${ARCH}"
          DOWNLOAD_URL="https://github.com/SagerNet/sing-box/releases/download/v${SINGBOX_VERSION}/${FILENAME}.tar.gz"

          echo "Downloading Singbox from: ${DOWNLOAD_URL}"
          curl -L -o "${FILENAME}.tar.gz" "${DOWNLOAD_URL}" || { echo "::error::Failed to download Singbox"; exit 1; }
          
          # 验证下载文件
          if [ ! -s "${FILENAME}.tar.gz" ]; then
            echo "::error::Downloaded file is empty or missing"
            exit 1
          fi
          
          tar -xzf "${FILENAME}.tar.gz" || { echo "::error::Failed to extract Singbox"; exit 1; }
          mv "${FILENAME}/sing-box" ./sing-box || { echo "::error::Failed to move sing-box"; exit 1; }
          chmod +x ./sing-box
          
          # 验证 sing-box 可执行
          if [ ! -x ./sing-box ]; then
            echo "::error::sing-box is not executable"
            exit 1
          fi
          
          echo "SINGBOX_CORE_PATH=$(pwd)/sing-box" >> $GITHUB_ENV

      - name: Run Python node tester
        run: |
          python tester.py

      - name: Commit test results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 检查 data/all.txt 是否存在且非空
          if [ ! -s data/all.txt ]; then
            echo "::warning::No valid test results in data/all.txt, skipping commit"
            exit 0
          fi
          
          # 检查是否有更改
          git add data/all.txt
          if git diff --cached --exit-code data/all.txt; then
            echo "::notice::No changes to commit in data/all.txt"
          else
            git commit -m "Update node test results [skip ci]"
            git push
            echo "::notice::Successfully committed and pushed updated test results"
          fi
