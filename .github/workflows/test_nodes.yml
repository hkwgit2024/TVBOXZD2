name: Test and Update Proxy Nodes

on:
  push:
    branches:
      - main
    paths:
      - 'test_nodes.py'
      - '.github/workflows/main.yml'

  schedule:
    - cron: '0 20 * * *'

  workflow_dispatch:

jobs:
  test_and_update_nodes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install httpx aiodns aiofiles psutil

      - name: Download Xray Core
        run: |
          XRAY_VERSION="1.8.8"
          XRAY_ZIP="Xray-linux-64.zip"
          XRAY_URL="https://github.com/XTLS/Xray-core/releases/download/v${XRAY_VERSION}/${XRAY_ZIP}"
          
          mkdir -p data
          curl -L -o xray.zip "${XRAY_URL}" --fail
          
          if [ ! -s xray.zip ]; then
            echo "Error: Xray zip file was not downloaded or is empty. Please check the URL and version."
            exit 1
          fi

          unzip -o xray.zip xray -d .
          
          if [ ! -f ./xray ]; then
            echo "Error: Xray executable 'xray' not found after unzipping. Check the zip content."
            exit 1
          fi

          chmod +x ./xray
          echo "XRAY_PATH=$(pwd)/xray" >> $GITHUB_ENV

      - name: Run Node Tester Script
        id: test_script
        run: |
          export TEST_TIMEOUT=15
          export LOG_LEVEL=DEBUG
          
          python test_nodes.py
          
          SUCCESS_COUNT=$(grep "最终成功节点数:" /dev/stdout | awk '{print $NF}' || echo "0")
          echo "successful_nodes_count=${SUCCESS_COUNT}" >> $GITHUB_OUTPUT
        env:
          # 这些环境变量仅在此处定义，不会在 run 块内使用 export
          # 但为了调试，run 块内的 export 优先级更高
          TEST_TIMEOUT: 15
          LOG_LEVEL: DEBUG

      - name: Commit and Push if changed
        if: ${{ steps.test_script.outputs.successful_nodes_count != '0' || success() }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add data/sub.txt data/history_results.json data/dns_cache.json
          
          if ! git diff --quiet --cached; then
            git commit -m "Update proxy nodes (Successful: ${{ steps.test_script.outputs.successful_nodes_count }})"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.BOT }}

      - name: Informational
        if: ${{ steps.test_script.outputs.successful_nodes_count == '0' }}
        run: |
          echo "No successful nodes found. Skipping commit."
