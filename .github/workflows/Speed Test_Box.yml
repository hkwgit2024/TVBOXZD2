name: Node Speed Test
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  
jobs:
  test_nodes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: sudo apt-get update && sudo apt-get install -y jq
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install Python dependencies
      run: pip install requests pyyaml PySocks
    - name: Download Sing-Box
      run: |
        SB_VERSION=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r '.tag_name' | cut -d v -f 2)
        SB_ARCH="amd64"
        curl -LO https://github.com/SagerNet/sing-box/releases/download/v${SB_VERSION}/sing-box-${SB_VERSION}-linux-${SB_ARCH}.tar.gz
        tar -xvf sing-box-${SB_VERSION}-linux-${SB_ARCH}.tar.gz
        sudo mv sing-box-${SB_VERSION}-linux-${SB_ARCH}/sing-box /usr/local/bin/sing-box
        sudo chmod +x /usr/local/bin/sing-box
        rm -rf sing-box-${SB_VERSION}-linux-${SB_ARCH}.tar.gz sing-box-${SB_VERSION}-linux-${SB_ARCH}
        sing-box version
    - name: Download Xray Core
      run: |
        XR_VERSION=$(curl -s https://api.github.com/repos/XTLS/Xray-core/releases/latest | jq -r '.tag_name' | cut -d v -f 2)
        XR_ARCH="64"
        curl -LO https://github.com/XTLS/Xray-core/releases/download/v${XR_VERSION}/Xray-linux-${XR_ARCH}.zip
        unzip -o Xray-linux-${XR_ARCH}.zip
        if [ -f xray ]; then
          sudo mv xray /usr/local/bin/xray
          sudo chmod +x /usr/local/bin/xray
          xray version || { echo "Error: xray version check failed"; exit 1; }
        else
          echo "Error: xray executable not found after unzip"
          exit 1
        fi
        rm -rf Xray-linux-${XR_ARCH}.zip geoip.dat geosite.dat
    - name: Debug Sing-Box and Xray
      run: |
        ls -l /usr/local/bin/sing-box
        /usr/local/bin/sing-box version
        ls -l /usr/local/bin/xray
        /usr/local/bin/xray version
    - name: Download all_nodes.txt
      run: |
        curl -o all_nodes.txt https://raw.githubusercontent.com/qjlxg/collectSub/refs/heads/main/all_nodes.txt || { echo "Failed to download all_nodes.txt"; exit 1; }
        if [ ! -s all_nodes.txt ]; then
          echo "Error: all_nodes.txt is empty"
          exit 1
        fi
    - name: Debug all_nodes.txt
      run: |
        ls -l all_nodes.txt
        head -n 10 all_nodes.txt
    - name: Run speed test script
      env:
        GITHUB_TOKEN: ${{ secrets.BOT }}
      run: python speed_test.py
    - name: Commit results
      run: |
        git config user.name github-actions[bot]
        git config user.email github-actions[bot]@users.noreply.github.com
        if [ -s data/sub.txt ]; then
          git add data/sub.txt
          git commit -m "Update speed test results at $(date -u)" || echo "No changes to commit"
          git push
        else
          echo "data/sub.txt is empty or does not exist, skipping commit."
        fi
