name: IPTV Checker Tests with FFmpeg

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    timeout-minutes: 60  # 60分钟超时

    steps:
    # 检出代码
    - uses: actions/checkout@v4

    # 设置 Python 环境
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # 安装 FFmpeg
    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    # 安装 Python 依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tqdm validators requests coverage

    # 创建 ff 目录并移动测试文件
    - name: Setup test directory
      run: |
        mkdir -p ff
        mv main_script.py test_iptv_checker.py ff/
        echo "Test Channel,http://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_adv_example_hevc/master.m3u8" > ff/list.txt

    # 运行单元测试并生成覆盖率报告
    - name: Run tests
      run: |
        cd ff
        python -m coverage run -m unittest test_iptv_checker.py -v
        python -m coverage report

    # 运行主脚本测试
    - name: Run main script
      run: |
        cd ff
        python main_script.py

    # 上传覆盖率报告和输出文件
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          ff/.coverage
          ff/ff.txt
          ff/failed_links.txt
          ff/iptv_checker.log

    # 记录运行时间
    - name: Log test duration
      run: |
        echo "Test duration: $(date -u -d "$(date -u) - $(date -u -r ff/.coverage)" +%H:%M:%S)"
