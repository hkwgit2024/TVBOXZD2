name: IPTV Checker Tests with FFmpeg

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tqdm validators requests coverage

    - name: Setup test files
      run: |
        mkdir -p ff
        echo "Test Channel,http://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_adv_example_hevc/master.m3u8" > list.txt
        echo '{"ffmpeg_path": "ffmpeg", "timeout": 3, "read_duration": 10, "max_retries": 2, "max_workers": 50, "min_resolution_width": 1280, "min_bitrate": 1000000, "max_response_time": 1.5, "quick_check_timeout": 2, "default_headers": {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36", "Referer": "https://www.example.com"}, "exclude_domains": ["epg.pw", "ali-m-l.cztv.com"]}' > ff/config.json

    - name: Run tests and main script
      run: |
        python -m coverage run -m unittest ff/test_iptv_checker.py -v
        python -m coverage report
        python ff/main_script.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          ff/.coverage
          ff/ff.txt
          ff/failed_links.txt
          ff/iptv_checker.log

    - name: Log test duration
      run: |
        echo "Test duration: $(date -u -d "$(date -u) - $(date -u -r ff/.coverage)" +%H:%M:%S)"
