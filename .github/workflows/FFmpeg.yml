name: IPTV Checker Tests with FFmpeg

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Define FFmpeg cache path
      id: ffmpeg_cache_path
      run: |
        echo "FFMPEG_CACHE_DIR=/var/cache/apt/archives" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache FFmpeg apt packages
      id: cache-ffmpeg
      uses: actions/cache@v4
      with:
        path: ${{ steps.ffmpeg_cache_path.outputs.FFMPEG_CACHE_DIR }}
        key: ${{ runner.os }}-ffmpeg-apt-v1-${{ hashFiles('**/Dockerfile', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-ffmpeg-apt-v1-

    - name: Install FFmpeg
      run: |
        echo "Installing FFmpeg..."
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        echo "FFmpeg installation complete."
      shell: bash

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage tqdm requests validators

    - name: Ensure ff directory exists
      working-directory: ${{ github.workspace }}
      run: |
        mkdir -p ff
      shell: bash

    - name: Verify setup files (config.json should be present from repo checkout)
      run: |
        ls -la
        ls -la ff/
        cat ff/config.json
      shell: bash

    - name: Test sample links
      run: |
        curl -I http://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_adv_example_hevc/master.m3u8
        curl -I https://cdn5.132.us.kg/live/cctv1/stream.m3u8
      shell: bash

    - name: Run tests with coverage
      run: |
        python -m coverage run -m unittest ff/test_iptv_checker.py -v
        python -m coverage report
        python ff/main_script.py --verbose

    - name: Verify generated files
      run: |
        echo "Listing files in ff/ directory after script execution:"
        ls -la ff/
      shell: bash

    - name: Upload generated files
      uses: actions/upload-artifact@v4
      with:
        name: generated-iptv-files
        path: |
          ff/ff.txt
          ff/failed_links.txt
          ff/iptv_checker.log
          ff/checkpoint.json
        retention-days: 7
