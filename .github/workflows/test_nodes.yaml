name: Test Nodes Workflow

on:
  push:
    paths:
      - 'test_nodes.py'
      - '.github/workflows/test_nodes.yaml'
  schedule:
    - cron: '0 0 1 * *'  # 每月1日0点
  workflow_dispatch:  # 手动触发

jobs:
  test-nodes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          pip install pyyaml requests pysocks tqdm

      - name: Install binary dependencies
        run: |
          set -e # 确保脚本在任何命令失败时立即退出

          mkdir -p bin
          
          echo "Downloading Xray..."
          curl -fL --retry 3 https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip -o xray.zip
          unzip -o xray.zip -d bin
          chmod +x bin/xray
          
          echo "Downloading trojan-go..."
          curl -fL --retry 3 https://github.com/p4gefau1t/trojan-go/releases/latest/download/trojan-go-linux-amd64.zip -o trojan-go.zip
          unzip -o trojan-go.zip -d bin
          chmod +x bin/trojan-go
          
          echo "Downloading Hysteria..."
          curl -fL --retry 3 https://github.com/HyNetwork/hysteria/releases/latest/download/hysteria-linux-amd64 -o bin/hysteria
          chmod +x bin/hysteria
          
          echo "Downloading Shadowsocks-rust..."
          curl -fL --retry 3 https://github.com/shadowsocks/shadowsocks-rust/releases/latest/download/shadowsocks-x86_64-unknown-linux-gnu.tar.xz -o ss.tar.xz
          
          # 直接尝试解压，如果文件损坏会立即报错
          tar -xf ss.tar.xz -C bin
          chmod +x bin/ss-local

          # 清理临时文件
          rm -f xray.zip trojan-go.zip ss.tar.xz
          echo "All binaries downloaded and installed successfully."

      - name: Run test script
        env:
          XRAY_PATH: ./bin/xray
          TROJAN_GO_PATH: ./bin/trojan-go
          HYSTERIA_PATH: ./bin/hysteria
          SS_LOCAL_PATH: ./bin/ss-local
        run: python test_nodes.py

      - name: Commit and push results
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add node_test_results.yaml node_test_results.csv node_test.log
          git commit -m "Update node test results" || echo "No changes"
          git push
