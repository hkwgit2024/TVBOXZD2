name: Node Tester # 工作流的名称，在 GitHub Actions 页面会显示

on:
  workflow_dispatch: # 允许在 GitHub Actions 界面手动触发此工作流
  schedule:
    - cron: '0 * * * *' # 定时任务：每小时的第0分钟运行（即每小时运行一次）。
                        # 你可以根据需要调整这个 cron 表达式。
                        # 例如：'0 0 * * *' 每天午夜运行一次。
                        # cron 表达式的格式：分钟 小时 日 月 星期 (都用UTC时间)

jobs:
  test-nodes:
    runs-on: ubuntu-latest # 指定工作流运行的操作系统环境，这里使用最新的 Ubuntu 虚拟机

    steps:
    - name: Checkout repository # 步骤1：检出你的 GitHub 仓库代码
      uses: actions/checkout@v4 # 使用官方的 checkout action 来获取仓库内容

    - name: List files for debugging # 步骤2 (可选，用于调试)：列出仓库中的所有文件和目录
      # 如果你遇到文件找不到的问题（例如 `ENOENT` 错误），这个步骤可以帮助你确认文件结构。
      # 确认 `package.json` 和 `test_nodes.js` 是否在预期路径。
      run: ls -R

    - name: Set up Node.js # 步骤3：设置 Node.js 运行环境
      uses: actions/setup-node@v4 # 使用官方的 setup-node action
      with:
        node-version: '20' # 指定使用的 Node.js 版本，建议使用 LTS 版本

    - name: Install dependencies # 步骤4：安装 JavaScript 依赖（例如 js-yaml）
      # npm 默认会查找当前目录下的 package.json 文件
      run: npm install
      working-directory: ./ # <-- **重要：** 确保这个路径是 `package.json` 所在的目录
                            # 如果 `package.json` 在仓库根目录，用 `./`
                            # 如果在子目录（例如 `my-app/`），请改为 `./my-app/`

    - name: Run Node Tests # 步骤5：运行你的节点测试脚本
      run: node test_nodes.js
      working-directory: ./ # <-- **重要：** 确保这个路径是 `test_nodes.js` 所在的目录
                            # 如果 `test_nodes.js` 在仓库根目录，用 `./`
                            # 如果在子目录（例如 `my-app/`），请改为 `./my-app/`

    - name: Commit test results # 步骤6：将测试结果文件提交回仓库
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        # 检查 data/521.yaml 是否存在，如果存在才添加和提交
        if [ -f data/521.yaml ]; then # <-- 添加这一行
          git add data/521.yaml
          git commit -m "Update node test results [skip ci]" || echo "No changes to commit"
          git push
        else # <-- 添加这一行
          echo "data/521.yaml not found, skipping commit." # <-- 添加这一行
        fi # <-- 添加这一行
      env:
        GITHUB_TOKEN: ${{ secrets.BOT }}
