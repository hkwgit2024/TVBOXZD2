name: Proxy Node Test

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  test-nodes:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 安装 Python 依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml aiohttp

      - name: 下载 Mihomo (Clash.Meta) 二进制文件
        run: |
          mkdir -p tools
          wget -O tools/clash.gz https://github.com/MetaCubeX/mihomo/releases/download/v1.19.10/mihomo-linux-amd64-v1.19.10.gz
          gunzip tools/clash.gz
          chmod +x tools/clash
          ./tools/clash -v | grep "v1.19.10" || { echo "::error::Mihomo 版本不匹配，非 v1.19.10"; exit 1; }

      - name: 验证 Clash 二进制文件
        run: |
          if [ ! -f tools/clash ]; then
            echo "::error::Clash 二进制文件 tools/clash 不存在"
            exit 1
          fi
          if [ ! -x tools/clash ]; then
            echo "::error::Clash 二进制文件 tools/clash 不可执行"
            exit 1
          fi
          ls -l tools/

      - name: 运行代理节点测试
        run: |
          if [ ! -f test_nodes.py ]; then
            echo "::error::未找到 test_nodes.py 脚本，退出。"
            exit 1
          fi
          python test_nodes.py
          if [ $? -ne 0 ]; then
            echo "::error::test_nodes.py 执行失败"
            exit 1
          fi

      - name: 上传测试结果到工件
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            data/521_*.yaml
            data/invalid_nodes_*.yaml
            test_nodes.log

      - name: 提交测试结果
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          python -c "
          import yaml
          import os
          results = []
          invalid_urls = []
          for f in os.listdir('data'):
              if f.startswith('521_') and f.endswith('.yaml'):
                  with open(f'data/{f}', 'r', encoding='utf-8') as file:
                      data = yaml.safe_load(file)
                      if data and 'proxies' in data:
                          results.extend(data['proxies'])
              if f.startswith('invalid_nodes_') and f.endswith('.yaml'):
                  with open(f'data/{f}', 'r', encoding='utf-8') as file:
                      data = yaml.safe_load(file)
                      if data and 'invalid_urls' in data:
                          invalid_urls.extend(data['invalid_urls'])
          with open('data/521.yaml', 'w', encoding='utf-8') as f:
              yaml.safe_dump({'proxies': results}, f, allow_unicode=True)
          with open('data/invalid_nodes.yaml', 'w', encoding='utf-8') as f:
              yaml.safe_dump({'invalid_urls': invalid_urls}, f, allow_unicode=True)
          "
          git add data/521.yaml data/invalid_nodes.yaml
          git pull --rebase origin main || true
          git commit -m "Update proxy test results" || true
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.BOT }}
