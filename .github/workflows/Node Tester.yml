name: Node Proxy Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-proxies:
    runs-on: ubuntu-latest
    shell: /usr/bin/bash -e {0} # 这将为该作业中的所有 'run' 命令设置默认 shell

    steps:
      - name: 检出仓库代码
        uses: actions/checkout@v4

      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 缓存 Node 模块
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 安装依赖
        run: npm install

      - name: 创建必要目录
        run: |
          mkdir -p tools
          mkdir -p data
          mkdir -p temp

      - name: 下载 Clash 核心
        run: |
          CLASH_VERSION="v1.17.0"
          CLASH_URL="https://github.com/Dreamacro/clash/releases/download/${CLASH_VERSION}/clash-linux-amd64-${CLASH_VERSION}.gz"
          
          echo "尝试从以下 URL 下载 Clash: ${CLASH_URL}"
          wget -v ${CLASH_URL} -O clash.gz
          if [ $? -ne 0 ]; then
            echo "wget 下载 Clash 失败。退出。"
            exit 1
          fi
          echo "已下载 clash.gz。文件大小:"
          ls -lh clash.gz

          echo "尝试解压 clash.gz..."
          gzip -d clash.gz
          if [ $? -ne 0 ]; then
            echo "gzip 解压失败。退出。"
            exit 1
          fi
          echo "已解压 clash。文件大小:"
          ls -lh clash

          echo "移动 clash 到 tools/clash..."
          mv clash tools/clash
          if [ $? -ne 0 ]; then
            echo "移动 clash 可执行文件失败。退出。"
            exit 1
          fi
          echo "Clash 已移动到 tools/clash。tools/ 目录内容:"
          ls -lh tools/

          echo "设置 tools/clash 的执行权限..."
          chmod +x tools/clash
          if [ $? -ne 0 ]; then
            echo "设置执行权限失败。退出。"
            exit 1
          fi

          echo "验证 Clash 可执行文件..."
          tools/clash -v
          if [ $? -ne 0 ]; then
            echo "Clash 可执行文件验证失败。退出。"
            exit 1
          fi
          echo "Clash 可执行文件验证成功。"

      - name: 运行 Node.js 测试
        run: node test_nodes.js
        env:
          NODE_OPTIONS: "--experimental-fetch"

      - name: 提交测试结果
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -f data/521.yaml ]; then
            git add data/521.yaml
            git commit -m "Update node test results (via Clash) [skip ci]" || echo "No changes to commit"
            git push
          else
            echo "data/521.yaml 未找到，跳过提交。"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.BOT }}