name: Search and Extract Nodes from GitHub

on:
  workflow_dispatch:
    # 允许手动触发工作流，可以在GitHub Actions页面上点击“Run workflow”按钮
    inputs:
      search_query_override:
        description: 'Optional: Custom search query to override script defaults (e.g., "my_specific_keyword in:file extension:json")'
        required: false
        default: '' # 默认为空，表示使用脚本内部定义的查询

  schedule:
    # 每天凌晨2点（UTC时间）自动运行工作流
    # 您可以根据需要调整cron表达式
    - cron: '0 2 * * *' 

jobs:
  run_node_extractor:
    runs-on: ubuntu-latest # 在最新的Ubuntu Runner上运行

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # 使用Python 3的最新版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyGithub PyYAML

    - name: Create data directory
      run: |
        mkdir -p data
      # 确保data目录在脚本运行前存在，避免脚本内部创建失败

    - name: Run Node Extraction Script
      env:
        # 设置您的GitHub Token
        # 强烈建议将此Token作为GitHub Secrets存储，以保护您的凭据
        # 这里的GH_TOKEN是您在仓库Secrets中设置的名称
        # 如果您的 Secret 名称是 BOT，请将 ${{ secrets.GH_TOKEN }} 改为 ${{ secrets.BOT }}
        BOT: ${{ secrets.GH_TOKEN }} 
        # 将手动触发时传入的自定义查询作为环境变量传递给脚本
        # 脚本可以读取这个环境变量来决定是否覆盖其内部的 search_queries
        OVERRIDE_SEARCH_QUERY: ${{ github.event.inputs.search_query_override }} 
      run: |
        # 运行您的Python脚本
        # 假设您的Python脚本名为 `extract_nodes.py`
        python github_node_search.py
        
    - name: Upload extracted nodes as artifact
      uses: actions/upload-artifact@v4
      with:
        name: extracted-nodes
        path: data/hy2.txt
        # 保留多久（天），默认是90天
        retention-days: 7
