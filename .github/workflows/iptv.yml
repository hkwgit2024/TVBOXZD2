name: IPTV 250724

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */168 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      contents: write

    steps:
      - name: 检查 BOT secret
        run: |
          if [ -z "${{ secrets.BOT }}" ]; then
            echo "错误：未设置 BOT secret，请在 GitHub Secrets 中配置"
            exit 1
          fi
        shell: bash

      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT }}

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: 安装 Python 依赖
        run: |
          pip install requests aiohttp beautifulsoup4 tenacity psutil pyyaml dnspython tqdm aiofiles cachetools
        shell: bash

      - name: 设置时区
        run: sudo timedatectl set-timezone 'Asia/Shanghai'
        shell: bash

      - name: 安装 FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
        shell: bash

      - name: 验证 ffprobe
        run: |
          if command -v ffprobe >/dev/null 2>&1; then
            echo "ffprobe 已找到并可用！版本信息如下："
            ffprobe -version
          else
            echo "错误：ffprobe 未找到或无法执行！请检查上一步的 FFmpeg 安装日志。"
            exit 1
          fi
        shell: bash

      - name: 运行 IPTV 爬取脚本
        env:
          BOT: ${{ secrets.BOT }}
        run: python tv.py
        shell: bash

      - name: 保存日志和生成文件
        uses: actions/upload-artifact@v4
        with:
          name: iptv-results
          path: |
            output/iptv_list.txt
            output/uncategorized_iptv.txt
            temp_channels/
            config/*.txt
            config/*.json
            logs/iptv.log
          retention-days: 7
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false
        if: always()

      - name: 检查文件更改
        id: check_changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "没有文件更改"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "检测到文件更改"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: 提交更改
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -m "更新 IPTV 频道列表 ($(date +'%Y-%m-%d %H:%M'))"
        shell: bash

      - name: 推送更改
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git fetch origin
          git pull origin main || (
            echo "检测到合并冲突，优先使用本地文件"
            git checkout --ours output/iptv_list.txt
            git add output/iptv_list.txt
            git commit -m "自动解决合并冲突并更新 IPTV 频道列表 ($(date +'%Y-%m-%d %H:%M'))"
          )
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.BOT }}
        shell: bash

      - name: 通知工作流失败
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: 'your-channel-id'
          text: 'IPTV 工作流失败：请检查日志，可能存在未解决的合并冲突或脚本错误！'
        continue-on-error: true
