name: 优化：直接下载配置与测速优选

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main

jobs:
  automate_proxies:
    runs-on: ubuntu-latest

    steps:
    - name: 检出你的仓库
      uses: actions/checkout@v4

    - name: 下载 Clash 原始配置 # 步骤 2: 直接下载 qjlxg/vt 仓库中的 clash_config.yaml
      run: |
        CONFIG_URL="https://raw.githubusercontent.com/qjlxg/vt/refs/heads/main/clash_config.yaml"
        OUTPUT_FILENAME="clash_config.yaml"
        
        echo "正在下载 ${CONFIG_URL} 并保存为 ${OUTPUT_FILENAME}..."
        curl -o "${OUTPUT_FILENAME}" "${CONFIG_URL}"
        
        if [ ! -f "${OUTPUT_FILENAME}" ]; then
          echo "::error::${OUTPUT_FILENAME} 文件下载失败，请检查 URL 或网络。"
          exit 1
        fi
        echo "${OUTPUT_FILENAME} 已成功下载。"
        
        # **修复：使用 sed 命令将 "true" / "false" 替换为 true / false**
        echo "正在修正 ${OUTPUT_FILENAME} 中的 YAML 格式错误..."
        sed -i 's/tls: "true"/tls: true/g' "${OUTPUT_FILENAME}"
        sed -i 's/tls: "false"/tls: false/g' "${OUTPUT_FILENAME}"
        echo "YAML 格式修正完成。"

    - name: 下载 clash-speedtest 二进制文件 # 步骤 3: 下载测速工具
      run: |
        TOOL_VERSION="v1.7.0"
        TOOL_NAME="clash-speedtest"
        OS_ARCH="Linux_x86_64" 
        DOWNLOAD_URL="https://github.com/faceair/${TOOL_NAME}/releases/download/${TOOL_VERSION}/${TOOL_NAME}_${OS_ARCH}.tar.gz"
        
        echo "正在从以下地址下载 ${TOOL_NAME}: ${DOWNLOAD_URL}"
        
        curl -L "${DOWNLOAD_URL}" -o "${TOOL_NAME}.tar.gz"
        tar -xzf "${TOOL_NAME}.tar.gz"
        chmod +x "${TOOL_NAME}"
        # **更改：不移动到 /usr/local/bin，直接放在当前目录**
        # sudo mv "${TOOL_NAME}" /usr/local/bin/

    - name: 对下载的配置进行测速和过滤 # 步骤 4: 使用 clash-speedtest 优选节点
      run: |
        mkdir -p output # 确保最终输出目录存在
        # **更改：直接使用 ./clash-speedtest 执行**
        ./clash-speedtest \
          -c clash_config.yaml \ # 源：使用直接下载的 clash_config.yaml
          -output output/speedtested_proxies.yaml \
          -rename \
          -concurrent 20 \
          -download-size 5MB \
          -upload-size 2MB \
          -timeout 5s \
          -max-latency 800ms \
          -min-download-speed 1.0 \
          -min-upload-speed 0.5

    - name: 提交并推送优选结果 # 步骤 5: 将最终优选后的配置文件提交并推送到你的 GitHub 仓库
      run: |
        git add output/speedtested_proxies.yaml
        git config user.name "GitHub Actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git commit -m "Auto-update: Downloaded config and speedtested proxies" || echo "没有需要提交的更改"
        git push
