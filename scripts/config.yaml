# FFmpeg 全局参数
# -hide_banner: 隐藏FFmpeg的启动信息，使输出更简洁。
# -loglevel: 设置日志级别。
#   error: 只显示错误信息 (生产环境推荐)。
#   warning: 显示警告和错误。
#   info: 显示信息、警告和错误。
#   verbose: 显示更详细的信息，用于调试。
#   debug: 显示最详细的调试信息，包括所有内部操作。
#   当您遇到所有链接都失败时，强烈建议设置为 verbose 或 debug 来查看详细错误。
ffmpeg_global_params: -hide_banner -loglevel verbose

# 协议特定的参数配置
# 您可以根据不同的流媒体协议（http, https, rtmp, hls）设置不同的参数。
# default 部分定义了所有协议的默认值，如果某个协议没有特定的配置，则会使用 default 中的值。
protocols:
  default:
    # 连接超时时间 (秒)。
    # 如果 FFmpeg 在此时间内无法建立连接或接收数据，则认为超时。
    # 建议增加此值，特别是对于响应较慢的服务器。
    timeout: 15

    # 重试次数。
    # 如果第一次检测失败，FFmpeg 会自动重试的次数。
    # 如果设置为0，则不会重试。当您遇到所有链接都失败时，请务必设置为大于0的值。
    retries: 3

    # 分辨率限制 (目前脚本中未直接使用此参数进行过滤，仅作为信息记录或未来扩展功能)
    # 例如：1920x1080，如果流的分辨率超过此值，可以考虑跳过或降级处理（需要脚本逻辑支持）。
    resolution_limit: null

    # 忽略广告 (目前FFmpeg无法直接过滤视频流中的广告，此参数仅为示意或未来复杂逻辑的预留)
    # 真正的广告过滤需要更复杂的图像识别或流媒体协议解析。
    ignore_ads: false

    # 质量偏好 (目前脚本中未直接使用此参数进行过滤，仅作为信息记录或未来扩展功能)
    # 例如：high, medium, low，可以基于视频码率或分辨率判断。
    quality_preference: null

    # 检查的最大时长 (秒)。
    # FFmpeg 会尝试读取流的此段时间，以确认流是否有效。
    # 防止检测到无限循环或非常长的无效流。
    max_duration_check: 30 # 调试时可以缩短，生产环境可设置为60-120秒

    # 额外的 FFmpeg 参数。
    # 例如："-vcodec copy -acodec copy" 用于不转码复制视频/音频流，但在这里我们只做检测，通常不需要。
    extra_params: ""

  http:
    timeout: 15
    retries: 3
    # 设置 User-Agent 字符串，模拟浏览器请求。
    # 某些直播源可能需要特定的 User-Agent 才能访问。
    extra_params: "-user_agent 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'"

  https:
    timeout: 15
    retries: 3
    extra_params: "" # 通常https不需要额外的客户端参数，除非有特定的SSL/TLS设置

  rtmp:
    timeout: 20 # RTMP流可能需要更长的超时时间
    retries: 3
    # -rtmp_live live: 对于RTMP直播流，指定直播模式。
    extra_params: "-rtmp_live live"

  hls:
    timeout: 15
    retries: 3
    # -protocol_whitelist: 允许FFmpeg访问的协议列表。
    # HLS 通常需要通过HTTP(S)获取M3U8文件，然后通过HTTP(S)/TCP/UDP等获取TS切片。
    extra_params: "-protocol_whitelist file,http,https,tcp,tls,udp,rtp"
